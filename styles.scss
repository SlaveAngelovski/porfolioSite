@use 'sass:math';
@use 'sass:color';

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  @extend .heightFill;
  box-sizing: border-box;
  scroll-behavior: smooth;
  // fix the scroll offset from the top
  scroll-padding-top: 17vh;
}

@font-face {
  font-family: 'Monserat';
  src: url('/fonts/Montserrat-VariableFont_wght.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

body {
  font-family: 'Monserat';
  margin: 0;
  padding: 0;
}

::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

img {
  max-width: 100%;
  height: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;
  margin: 0;
  padding: 0;
}

.hidden {
  opacity: 0;
}

$x-small-distance: 0.35rem;
$small-distance: 0.5rem;
$medium-distance: 1rem;
$large-distance: 1.5rem;
$x-large-distance: 2rem;

$blue-color: rgb(52, 124, 162);
$white-color: rgb(246, 246, 246);
$grey-color: rgb(97, 97, 97);
$light-grey-color: rgb(118, 118, 118);
$red-color: rgb(162, 52, 52);

$phone-size: 768px;
$tablet-size: 1024px;

button {
  cursor: pointer;
  appearance: none;
  border: none;
  padding: $small-distance $medium-distance;
  transition: background-color 0.3s ease, color 0.3s ease;

  &:focus {
    outline: none;
  }

  &.dark {
    background-color: $grey-color;
    color: $white-color;

    &:hover {
      background-color: color.adjust($grey-color, $lightness: 10%);
    }
  }

  &.light {
    background-color: $white-color;
    color: $grey-color;

    &:hover {
      background-color: color.adjust($white-color, $lightness: -10%);
    }
  }
}

.heightFill {
  height: -webkit-fill-available;
  height: -moz-available;
  height: fill-available;
}

.widthFill {
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
}

.mainContainer {
  display: flex;
}

.middleContainer {
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
}

.header {
  position: sticky;
  top: 0;
  background-color: rgba($white-color, 0.7);
  z-index: 2;

  & nav {
    display: flex;
    justify-content: center;
    margin: 0 $small-distance;

    @media screen and (max-width: $phone-size) {
      justify-content: space-between;
    }

    & a {
      margin: $small-distance;
      text-decoration: none;
      color: color.adjust($light-grey-color, $lightness: -20%);

      @media screen and (min-width: $tablet-size) {
        margin: calc(0.75rem + 0.5vw);
      }
    }

    .active {
      &:after {
        content: '';
        display: block;
        height: 2px;
        background-color: $grey-color;
        margin-top: 4px;
      }
    }
  }
}

aside {
  position: fixed;
  display: flex;
  flex-direction: column;
  gap: $medium-distance;
  padding: $small-distance;
  background-color: rgba($white-color, 0.6);
  top: 50%;
  left: auto;
  right: 0;
  z-index: 2;

  & svg {
      width: 26px;
      height: 100%;
      vertical-align: middle;
      fill: $light-grey-color;
      transition: fill 0.3s ease;

      &:hover {
        fill: $grey-color;
      }
    }
}

aside, .header {
  backdrop-filter: blur(10px);
}

a {
  color: $light-grey-color;
  cursor: pointer;
  transition: color 0.3s ease;
  text-decoration: underline;
  text-decoration-style: solid;

  &:hover {
    color: black;
  }
}

.socialContainer {
  right: 0;
  display: flex;
  flex-direction: column;

  & svg {
    width: 24px;
    height: 24px;
    margin: $small-distance $large-distance;
    transition: fill 0.3s ease;
    fill: $light-grey-color;

    &:hover {
      fill: $grey-color;
    }
  }
}

.intro {
  display: flex;
  flex-direction: column;
  position: relative;
  background: $white-color;
  overflow: hidden;
  min-height: 95vh;

  &::after {
    content: '';
    transition: transform 0.5s ease-in-out;
    background: $blue-color;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    transform: translateY(-50%);

    @media screen and (min-width: $phone-size) {
      transform: translateX(-50vw);
    }
  }

  & .description {
    z-index: 1;
    color: $white-color;
    position: absolute;
    top: 50%;
    bottom: 50%;
    right: auto;
    transition: opacity 0.5s ease-in-out;
    left: 8vw;

    @media screen and (max-width: $tablet-size) {
      top: 35%;
      right: auto;
      bottom: auto;
      left: auto;
      padding: 0 $large-distance;
    }
  }

  & h1 {
    z-index: 1;
    text-align: center;
    font-size: 15vw;
    margin: auto;
    transition: transform 0.5s ease-in-out;
  }

  & span {
    transition: color 0.2s ease-in-out;

    &:first-child {
      color: black;
    }

    &:last-child {
      display: inline-flex;
      transition: width 0.2s ease-in-out;
      width: 1ch;
      color: $blue-color;
    }
  }
}

.introShowDescription {
  &::after {
    transform: translateY(0%);

    @media screen and (min-width: $phone-size) {
      transform: translate(-20vw);
    }
  }

  h1 {
    transform: translateY(calc(41vh + 6vw)) scale(0.8);

    @media screen and (min-width: $phone-size) {
      transform: translate(26.75vw, -3.5vw) rotateZ(-90deg) scale(0.6);
    }
  }

  span {
    &:first-child {
      color: $white-color;
    }

    &:last-child {
      color: rgba(0, 0, 0, 0);
      width: 0px;
    }
  }
}

.skills {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.buddha {
  & #wholeBody {
    animation: buddhaHover 3s ease-in-out infinite;
  }

  & #bodyShadow {
    transform-origin: bottom center;
    animation: buddhaShadow 3s ease-in-out infinite;
  }

  @for $i from 1 through 8 {
    & #{"#arm_#{$i}"} {
 transform-origin: top center;
    animation: armSlightRotation 3s ease-in-out infinite;
    $delay: calc(math.random(30) / 10);
    animation-delay: -#{$delay}s;
  }
}
}

.skillsTitleContainer {
  margin-top: -30vh;
  pointer-events: none;
  height: 60vh;
  position: relative;
  z-index: -1;
  text-align: center;
}

.skillsTitle {
  position: sticky;
  line-height: 0.71;
  top: 18vh;
  font-size: clamp(2.5em, 17vw, 9rem);
  color: $red-color;
}

.skillsContainer {
  display: grid;
  grid-template-columns: repeat(9, minmax(115px, 1fr));
  grid-template-rows: repeat(3, 25ch);
  grid-auto-flow: column;
  margin: 0 auto;

  @media screen and (max-width: $tablet-size) {
    grid-template-columns: repeat(6, 14vw);
    grid-template-rows: repeat(1, 25ch);
  }
}

.buddhaContainer {
  display: none;
  grid-column: span 3;
  grid-row: span 1 / 3;
  padding-left: $large-distance;

  @media screen and (min-width: calc($tablet-size + 1px)) {
    display: block;
  }
}

.skillTreeContainer {
  background-color: $red-color;
  position: relative;
  grid-column: span 6;
  grid-row: span 3;

  @media screen and (max-width: $tablet-size) {
    font-size: 0.9em;
  }

  @media screen and (min-width: $tablet-size) {
    margin: 0 $large-distance;
  }
}

.skillBranches {
  display: grid;
  grid-template-columns: repeat(2, auto);

  @media screen and (min-width: $phone-size) {
    grid-template-columns: repeat(6, auto);
  }

  @media screen and (min-width: $tablet-size) {
    grid-template-columns: repeat(4, auto);
  }
}

.branchTitle {
  font-size: 1.25em;
  font-weight: 500;
  padding: $small-distance $medium-distance;
  color: $white-color;

  border-bottom: 2px solid transparent;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    background-color: rgba($white-color, 0.15);
    border-left-width: 6px;
  }

  &:not(:first-child) {
    border-left: 2px solid rgba($white-color, 0.8);
  }

  &.active {
    background-color: rgba($white-color, 0.2);
    border-bottom: 2px solid rgba($white-color, 0.2);
    box-shadow: 0 0 0 2px rgba($white-color, 0.3);
  }
}

.skilNode {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba($white-color, 0.05);
  cursor: pointer;
  transition: all 0.3s ease;
  border: 2px solid rgba($white-color, 0.2);

  &:hover {
    transform: scale(1.05);
    background-color: rgba($white-color, 0.1);
  }

  &.active {
    background-color: rgba($white-color, 0.15);
    border-color: rgba($white-color, 0.6);
    box-shadow: 0 0 0 2px rgba($white-color, 0.3);
  }

  .nodeIcon {
    font-size: 1.8rem;
  }

  .nodeLabel {
    font-size: 0.8em;
    text-align: center;
    color: $white-color;
    font-weight: 500;
    max-width: 90px;
  }
}

.skillDetailsPanel {
  display: grid;
  grid-auto-rows: max-content;
  gap: $large-distance;
  background-color: rgba($white-color, 0.05);
  padding: $large-distance;
  border-top: 2px solid rgba($white-color, 0.2);

  @media screen and (max-width: $tablet-size) {
    min-height: 40ch;
  }

  .skillContent {
    display: none;
    opacity: 0;

    &.active {
      display: contents;
      animation: fadeIn 0.5s ease forwards;
    }

    h1 {
      font-size: 1.2em;
      color: $white-color;
      position: relative;
      padding: $small-distance 0;

      &::after {
        content: '';
        position: absolute;
        bottom: -3px;
        left: 0;
        width: 100%;
        height: 1.2px;
        background-color: rgba($white-color, 0.3);
      }
    }

    ul {
      padding-top: $x-small-distance;
      padding-left: 1.5rem;
      margin-bottom: 0;
      font-size: 0.9em;

      li {
        color: $white-color;
        padding: $x-small-distance 0;

        @media screen and (min-width: $phone-size) {
          max-width: 60ch;
        }
      }
    }
  }
}

.skillFooter {
  padding: $x-large-distance $large-distance;
  margin: -1.5vh $large-distance 0 $large-distance;
  max-width: 150ch;
  background: $white-color;
  font-size: 0.9em;
}

.portfolio {
  margin: 15vh auto $large-distance auto;
  padding: 0 $large-distance;
  max-width: 150ch;
}

.arrowLeft,
.arrowRight {
  transition: opacity 0.3s ease;
  cursor: pointer;

  @media screen and (max-width: $tablet-size) {
    position: absolute;
    top: auto;
    bottom: auto;
    z-index: 2;
    background-color: rgba($white-color, 0.5);
  }

  &.hidden {
    pointer-events: none;
  }

  & svg {
    width: 3em;
    height: 3em;
    stroke: $light-grey-color;
    transition: stroke 0.3s ease;

    @media screen and (min-width: $tablet-size) {
      width: 5em;
      height: 5em;
    }

    &:hover {
      stroke: $grey-color;
    }
  }
}

@media screen and (max-width: $tablet-size) {
  .arrowLeft {
    left: 0;
  }

  .arrowRight {
    right: 0;
  }
}

.portfolioItem {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(4, 1fr);
  background-color: $white-color;
  grid-auto-rows: max-content;

  & img {
    opacity: 0;
    display: none;
    user-select: none;

    &.active {
      display: block;
      animation: fadeIn 0.3s ease forwards;
    }
  }
}

.description {
  grid-column: span 10;
  grid-row: span 4;
  display: grid;

  @media screen and (min-width: $tablet-size) {
    grid-column: span 3;
    grid-template-rows: repeat(4, 1fr);
    grid-auto-rows: min-content;
  }

  & h2 {
    font-size: 1.5em;
    color: $grey-color;
    user-select: none;
  }

  & h2,
  p,
  a {
    padding: $large-distance;
  }

  & h2,
  a {
    text-align: center;
  }

  & a {
    width: fit-content;
    height: fit-content;
    margin: 0 auto;
  }

  p {
    line-height: 1.4;
    max-width: 58ch;

    @media screen and (max-width: $phone-size) {
      padding: 0;
      font-size: 1.1em;
    }
  }
}

.imageContainerParent {
  display: flex;
  justify-content: center;
  align-items: center;
  grid-column: span 10;
  grid-row: span 4;
  position: relative;

  @media screen and (min-width: $tablet-size) {
    grid-column: span 7;
    padding: $x-large-distance;
  }
}

.imageContainer {
  max-width: 800px;
}

[data-portfolio-item] {
  display: none;
  background-color: white;
  grid-row: span 3;

  &.active {
    display: grid;
    opacity: 1;
    animation: fadeIn 0.3s ease forwards;
  }
}

.descriptionFooter {
  @extend .widthFill;
  margin-top: $large-distance;
  font-size: clamp(0.8em, 2vw, 3em);
  text-align: center;
  color: $light-grey-color;
  grid-row: span 1;

  & h1:first-child {
    line-height: 0.86;
  }

  & h1:last-child {
    background-color: $white-color;
    padding: $small-distance 0;
  }
}

.contact {
  margin: 10vh auto 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.housesContainer {
  display: grid;
  grid-auto-flow: column;
  align-items: flex-end;
  border-bottom: 4px solid $light-grey-color;
  padding: 0 $large-distance;

  & img {
    transform: rotateX(-90deg) perspective(500px);
    transition: transform 0.5s cubic-bezier(0.67, 0, 0.29, 0.99);
    transform-origin: bottom;
    user-select: none;
  }

  @for $i from 1 through 5 {
    & img:nth-child(#{$i}) {
      transition-delay: #{$i}00ms;
    }
  }
}

.showHouses {
  & img {
    transform: rotateX(0deg) perspective(500px);
  }
}

svg.email {
  transform: translateY(-15%);
  transition: transform 0.3s cubic-bezier(0.86, 0, 0.07, 1);

  & #letter {
    transition: transform 0.3s cubic-bezier(0.86, 0, 0.07, 1);
    transform: translateY(49%);
  }

  & #envelopeTriangleUp {
    transition: clip-path 0.2s cubic-bezier(1, .15, .73, 1.27), transform 0.3s cubic-bezier(0.86, 0, 0.07, 1);
    transform-origin: center;
    clip-path: inset(-100% 0 0 -10%);
  }
}

.emailParent:hover {
  & .email {
    transform: translateY(0%);
  }

  & #letter {
    transform: translateY(10%);
  }

  & #envelopeTriangleUp {
    transform: rotateX(180deg);
    clip-path: inset(-16% 0 0 0);
  }
}

svg.phone {

  & #wave,
  & #wave2 {
    transform-origin: center;
    opacity: 0.7;
  }
}

.phoneParent:hover {

  & #wave,
  & #wave2 {
    animation: waveAnimation 0.9s ease infinite;
  }

  & #wave2 {
    animation-delay: 0.05s;
  }

  & #phoneGroup {
    animation: phoneVibrate 0.7s ease infinite;
  }
}

svg.location {
  transform-origin: top;
  padding: $small-distance;
}

.locationParent:hover svg {
  animation: jumpAndSquish 1.5s ease infinite;
}

.infoContainer {
  background-color: $white-color;
  padding: $x-large-distance;
  margin: 0 -5vw -3vh -5vw;
  position: relative;
  text-align: center;

  h2 {
    color: $grey-color;
  }
}

.contactContainer {
  display: flex;
  flex-direction: column;
  gap: $small-distance;

  & div {
    display: grid;
    grid-template-columns: 3em max-content;
    align-items: center;
    gap: $medium-distance;
  }
}

.contactFooter {
  width: 100%;
  background-color: black;
  color: $white-color;
  text-align: center;
  padding: 5vh $x-large-distance $x-large-distance $x-large-distance;
}

.galleryContainer {
  display: grid;
  grid-auto-flow: dense;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));

  & > div {
    display: flex;

    & img {
      object-fit: cover;
    }
  }

  dialog {
    overflow: hidden;
  }
}

dialog:modal {
  animation: fadeIn 0.3s quadratic(0.5, 0, 0.5, 1);
}

dialog[open] {
  display: flex;
  @extend .widthFill;
  @extend .heightFill;
}

dialog {
  @extend .widthFill;
  @extend .heightFill;
  place-content: center;
  background-color: transparent;
  border: none;

  &::backdrop {
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(8px);
  }

  &:focus {
    outline: none;
  }

  .closeButton {
    top: 0;
    right: 0;
    position: absolute;
  }

  & img {
    transition: opacity 0.3s ease;
  }

  .active {
    animation: fadeIn 0.2s ease forwards;
  }

  .popupContent {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;

    & * {
      user-select: none;
    }
  }
}

.loading {
  &:after {
    content: 'Loading...';
    font-size: 1.5em;
    color: $light-grey-color;
    animation: fadeIn 1s ease-in-out infinite;
    user-select: none;

  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes introToBlue {
  0% {
    background: linear-gradient(to left, $white-color 50vw, $blue-color 50vw);
  }

  100% {
    background: linear-gradient(to right, $blue-color 80vw, $white-color 20vw);
  }
}

@keyframes buddhaHover {
  0% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-7px);
  }

  100% {
    transform: translateY(0);
  }
}

@keyframes buddhaShadow {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.9);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes armSlightRotation {
  0% {
    transform: rotateZ(0deg);
  }

  50% {
    transform: rotateZ(1deg);
  }

  100% {
    transform: rotateZ(0deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes waveAnimation {
  0% {
    transform: scale(1);
    opacity: 0.7;
  }

  25% {
    transform: scale(1.1);
    opacity: 0.5;
  }

  50% {
    transform: scale(0.85);
    opacity: 0.8;
  }

  100% {
    transform: scale(1);
    opacity: 0.7;
  }
}

@keyframes phoneVibrate {
  0% {
    transform: translate3d(0, 0, 0);
  }

  25% {
    transform: translate3d(1rem, 1rem, 0);
  }

  50% {
    transform: translate3d(-1rem, 0, -1rem);
  }

  75% {
    transform: translate3d(1rem, 0, 1rem);
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes jumpAndSquish {
  0% {
    transform: translateY(0) scaleY(1);
  }

  35% {
    transform: translateY(-5%) scaleY(0.8);
  }

  70% {
    transform: translateY(-5%) scaleY(0.8);
  }

  100% {
    transform: translateY(0) scaleY(1);
  }
}