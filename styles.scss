@use 'sass:math';

* {
   box-sizing: border-box;
   margin: 0;
   padding: 0;
}

html {
  @extend .heightFill;
  box-sizing: border-box;
}

body {
  font-family: 'Verdana', sans-serif;
  margin: 0;
  padding: 0;
}

::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

img {
  max-width: 100%;
  height: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;
  margin: 0;
  padding: 0;
}

.hidden {
  opacity: 0;
}

$x-small-distance: 0.35rem;
$small-distance: 0.5rem;
$medium-distance: 1rem;
$large-distance: 1.5rem;
$x-large-distance: 2rem;

$blue-color: rgb(52, 124, 162);
$white-color: rgb(246, 246, 246);
$white-color-transparent: rgba(246, 246, 246, 0.8);
$grey-color: rgb(97, 97, 97);
$light-grey-color: rgb(118, 118, 118);
$red-color: rgb(162, 52, 52);

.heightFill {
  height: -webkit-fill-available;
  height: -moz-available;
  height: fill-available;
}

.widthFill {
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
}

.main-container {
  display: flex;
}

.middleContainer {
  width: -webkit-fill-available;
  width: -moz-available;
  width: fill-available;
}

.header {
  position: sticky;
  top: 0;
  background-color: $white-color-transparent;
  z-index: 1;

  & nav {
    display: flex;
    place-content: center;

    & a {
      margin: $large-distance;
    }

    & svg {
      width: 24px;
      height: 24px;
      vertical-align: middle;
      fill: $light-grey-color;
      transition: fill 0.3s ease;

      &:hover {
        fill: $grey-color;
      }
    }


    .active {
      &:after {
        content: '';
        display: block;
        height: 2px;
        background-color: $grey-color;
        margin-top: 4px;
      }
    }
  }
}

a {
  color: $light-grey-color;
  cursor: pointer;
  transition: color 0.3s ease;

  &:hover {
    color: black;
  }
}

.socialContainer {
  right: 0;
  display: flex;
  flex-direction: column;

  & svg {
    width: 24px;
    height: 24px;
    margin: $small-distance $large-distance;
    transition: fill 0.3s ease;
    fill: $light-grey-color;

    &:hover {
      fill: $grey-color;
    }
  }
}

.intro {
  display: flex;
  flex-direction: column;
  position: relative;
  background: $white-color;
  overflow: hidden;
  min-height: calc(25vw + 25vh);

  &::after {
    content: '';
    transition: transform 0.5s ease-in-out;
    background: $blue-color;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    transform: translateX(-50vw);
  }

  & .description {
    z-index: 1;
    color: $white-color;
    position: absolute;
    top: 50%;
    bottom: 50%;
    left: 20vw;

    transition: opacity 0.5s ease-in-out;
  }

  & h1 {
    z-index: 1;
    text-align: center;
    font-size: 15vw;
    margin: auto;
    transition: transform 0.5s ease-in-out;
  }

  & span {
    transition: color 0.2s ease-in-out;

    &:first-child {
      color: black;
    }

    &:last-child {
      color: $blue-color;
    }
  }
}

.introShowDescription {
  &::after {
    transform: translate(-20vw);
  }

  h1 {
    transform: translate(26.5vw, -3.5vw) rotateZ(-90deg) scale(0.6);
  }

  span {
    &:first-child {
      color: $white-color;
    }

    &:last-child {
      color: rgba(0, 0, 0, 0);
    }
  }
}

.buddha {
  & #wholeBody {
    animation: buddhaHover 3s ease-in-out infinite;
  }

  & #bodyShadow {
    transform-origin: bottom center;
    animation: buddhaShadow 3s ease-in-out infinite;
  }

  @for $i from 1 through 8 {
    & #{"#arm_#{$i}"} {
     transform-origin: top center;
      animation: armSlightRotation 3s ease-in-out infinite;
      $delay: calc(math.random(30) / 10);
      animation-delay: -#{$delay}s;
    }
  }
}

.skillsTitleContainer {
  margin-top: -30vh;
  pointer-events: none;
  height: 60vh;
  position: relative;
  z-index: -1;
  text-align: center;
}

.skillsTitle {
  position: sticky;
  line-height: 0.79;
  top: 18vh;
  font-size: clamp(2.5em, 17vw, 9rem);
  color: $red-color;
}

.skillsContainer {
  display: flex;
  justify-content: center;
}

.buddhaContainer {
  display: flex;
  width: clamp(300px, 45vw, 600px);
  padding: 0 $large-distance;
}

.skillTreeContainer {
  display: grid;
  grid-template-rows: min-content;
  background-color: $red-color;
  
}

.skillBranches {
  display: grid;
  grid-auto-flow: column;
}

.branchTitle {
  font-size: clamp(0.8em, 1.3vw, 1.2em);
  font-weight: 500;
  padding: $small-distance $medium-distance;
  color: $white-color;
  background-color: rgba($white-color, 0.1);
  border-bottom: 2px solid rgba($white-color, 0);
  text-align: center;
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    background-color: rgba($white-color, 0.15);
    border-left-width: 6px;
  }

  &:not(:first-child) {
    border-left: 4px solid $white-color;
  }

  &.active {
    background-color: rgba($white-color, 0.2);
    border-bottom: 2px solid rgba($white-color, 0.2);
    box-shadow: 0 0 0 2px rgba($white-color, 0.3);
  }
}

.skilNode {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba($white-color, 0.05);
  cursor: pointer;
  transition: all 0.3s ease;
  border: 2px solid rgba($white-color, 0.2);

  &:hover {
    transform: scale(1.05);
    background-color: rgba($white-color, 0.1);
  }

  &.active {
    background-color: rgba($white-color, 0.15);
    border-color: rgba($white-color, 0.6);
    box-shadow: 0 0 0 2px rgba($white-color, 0.3);
  }

  .nodeIcon {
    font-size: 1.8rem;
  }

  .nodeLabel {
    font-size: 0.8em;
    text-align: center;
    color: $white-color;
    font-weight: 500;
    max-width: 90px;
  }
}

.skillDetailsPanel {
  display: grid;
  grid-auto-rows: max-content;
  gap: $large-distance;
  min-height: 62ch;
  background-color: rgba($white-color, 0.05);
  border-radius: 8px;
  padding: $large-distance;
  box-sizing: border-box;

  .skillContent {
    display: none;
    opacity: 0;

    &.active {
      display: block;
      animation: fadeIn 0.5s ease forwards;
    }

    h1 {
      font-size: 1.2em;
      color: $white-color;
      position: relative;
      padding: $small-distance 0;

      &::after {
        content: '';
        position: absolute;
        bottom: -3px;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: rgba($white-color, 0.3);
      }
    }

    ul {
      padding-top: $x-small-distance;
      padding-left: 1.5rem;
      margin-bottom: 0;

      li {
        color: $white-color;
        padding: $x-small-distance 0;
        max-width: 50ch;
      }
    }
  }
}

.skillFooter {
  padding: $x-large-distance $large-distance;
  margin: -1.5vh 4vw 0 4vw;
  background: rgba($white-color, 0.8);
  font-size: 0.9em;
}

.portfolio {
  margin: 15vh $x-large-distance $large-distance $x-large-distance;
}

.portfolioItem {
  display: grid;
  grid-template-columns: repeat(10, 1fr);

  .description {
    grid-column: span 3 / span 3;
    display: flex;
    flex-direction: column;
    align-items: center;

    & h2 {
      font-size: 1.5em;
      color: $grey-color;
      user-select: none;
    }

    & h2, p, a {
      padding: $large-distance;
    }

    & button {
      background-color: $grey-color;
      color: $white-color;
      padding: $small-distance $medium-distance;
      border: none;
      cursor: pointer;
    }
  }

  .imageContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    grid-column: span 7 / span 7;
    background-color: $white-color;
    padding: $x-large-distance;    
  }

  & .arrowLeft, .arrowRight {
    transition: opacity 0.3s ease;
    cursor: pointer;

    &.hidden {
      pointer-events: none;
    }
  }

  & img {
      opacity: 0;
      display: none;
      user-select: none;

      &.active {
        display: block;
        animation: fadeIn 0.3s ease forwards;
      }
    }

  & svg {
    width: 5em;
    height: 5em;
    stroke: $light-grey-color;
    transition: stroke 0.3s ease;

    &:hover {
      stroke: $grey-color;
    }
  }

  & [data-portfolio-item] {
    display: none;

    &.active {
      display: flex;
      flex-direction: column;
      align-items: center;
      opacity: 1;
      animation: fadeIn 0.3s ease forwards;
    }
  }

  .descriptionFooter {
    @extend .widthFill;
    margin-top: $large-distance;
    font-size: clamp(0.8em, 2vw, 3em);
    text-align: center;
    color: $light-grey-color;

    & h1:first-child {
      line-height: 0.86;
    }

    & h1:last-child{
      background-color: $white-color;
      padding: $small-distance 0;
    }
  }
}

.gallery-container {
  // stacked layout for gallery masonary
  // iregular sizes fill gaps, so no gaps needed
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(25vw, 1fr));
  grid-auto-flow: dense;
  gap: 0;
  // display: flex;
  // flex-wrap: wrap;

  & > div {
    display: flex;
    // max-width: 25vw;
    // use css for loop for random sizes for the width
    @for $i from 1 through 14 {
      &:nth-child(1n + #{$i}) {
        //grid-column: span $i;
        // flex: 0 0 calc(20% * $i);
        // width: calc(20% * $i);
      }
    }

    & img {
      //max-width: unset;
      //height: fit-content;
      object-fit: cover;   
    }
  }
}

dialog:modal {
  animation: fadeIn 0.3s ease forwards;
}

dialog[open] {
  display: flex;
}

dialog {
  @extend .widthFill;
  @extend .heightFill;
  place-content: center;
  background-color: transparent;
  border: none;

  &::backdrop {
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(8px);
  }

  .closeButton {
    top: 0;
    right: 0;
    position: absolute;
  }

  .popupContent {
    display: flex;
    justify-content: center;
    align-items: center;

    & * {
      user-select: none;
    }
  }
}

.loading {
  &:after {
    content: 'Loading...';
    font-size: 1.5em;
    color: $light-grey-color;
    animation: fadeIn 1s ease-in-out infinite;
    user-select: none;

  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes introToBlue {
  0% {
    background: linear-gradient(to left, $white-color 50vw, $blue-color 50vw);
  }

  100% {
    background: linear-gradient(to right, $blue-color 80vw, $white-color 20vw);
  }
}

@keyframes buddhaHover {
  0% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-7px);
  }

  100% {
    transform: translateY(0);
  }
}

@keyframes buddhaShadow {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.9);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes armSlightRotation {
  0% {
    transform: rotateZ(0deg);
  }

  50% {
    transform: rotateZ(1deg);
  }

  100% {
    transform: rotateZ(0deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}